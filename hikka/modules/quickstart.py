#             ‚ñà ‚ñà ‚ñÄ ‚ñà‚ñÑ‚ñÄ ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñà ‚ñÄ
#             ‚ñà‚ñÄ‚ñà ‚ñà ‚ñà ‚ñà ‚ñà‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÑ ‚ñà
#              ¬© Copyright 2022
#           https://t.me/hikariatama
#
# üîí      Licensed under the GNU AGPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html

import logging
import os
from random import choice

from .. import loader, translations
from ..inline.types import BotInlineCall

logger = logging.getLogger(__name__)
imgs = [
    "https://i.gifer.com/GmUB.gif",
    "https://i.gifer.com/Afdn.gif",
    "https://i.gifer.com/3uvT.gif",
    "https://i.gifer.com/2qQQ.gif",
    "https://i.gifer.com/Lym6.gif",
    "https://i.gifer.com/IjT4.gif",
    "https://i.gifer.com/A9H.gif",
    
]

TEXT = """üåòüá¨üáß <b>Hello.</b> You've just installed <b>Hikka</b> userbot.

‚ùì <b>Need help?</b> Feel free to join our support chat. We help <b>everyone</b>.

üìº <b>You can find and install modules using @hikkamods_bot. Simply enter your search query and click üì• Install on needed module</b>

"""


TEXT_RU = """üåòüá∑üá∫ <b>–ü—Ä–∏–≤–µ—Ç.</b> –¢–≤–æ–π —é–∑–µ—Ä–±–æ—Ç <b>Hikka</b> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.

‚ùì <b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b> –í—Å—Ç—É–ø–∞–π –≤ –Ω–∞—à —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –ú—ã –ø–æ–º–æ–≥–∞–µ–º <b>–≤—Å–µ–º</b>.

üìº <b>–¢—ã –º–æ–∂–µ—à—å –∏—Å–∫–∞—Ç—å –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –º–æ–¥—É–ª–∏ —á–µ—Ä–µ–∑ @hikkamods_bot. –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏ –Ω–∞–∂–º–∏ üì• Install –Ω–∞ –Ω—É–∂–Ω–æ–º –º–æ–¥—É–ª–µ</b>

"""

if "OKTETO" in os.environ:
    TEXT += (
        "‚òÅÔ∏è <b>Your userbot is installed on Okteto</b>. You will get notifications from"
        " @WebpageBot. Do not block him."
    )
    TEXT_RU += (
        "‚òÅÔ∏è <b>–¢–≤–æ–π —é–∑–µ—Ä–±–æ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ Okteto</b>. –¢—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç"
        " @WebpageBot. –ù–µ –±–ª–æ–∫–∏—Ä—É–π –µ–≥–æ."
    )

if "DYNO" in os.environ:
    TEXT += (
        "‚ôìÔ∏è <b>Your userbot is installed on Heroku</b>. You will get notifications from"
        " @WebpageBot. Do not block him."
    )
    TEXT_RU += (
        "‚ôìÔ∏è <b>–¢–≤–æ–π —é–∑–µ—Ä–±–æ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ Heroku</b>. –¢—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç"
        " @WebpageBot. –ù–µ –±–ª–æ–∫–∏—Ä—É–π –µ–≥–æ."
    )


@loader.tds
class QuickstartMod(loader.Module):
    """Notifies user about userbot installation"""

    strings = {"name": "Quickstart"}

    async def client_ready(self, client, db):
        if db.get("hikka", "disable_quickstart", False):
            raise loader.SelfUnload

        self.mark = (
            lambda lang: [
                [{"text": "ü•∑ Support chat", "url": "https://t.me/hikka_talks"}],
                [
                    {
                        "text": "üá∑üá∫ –†—É—Å—Å–∫–∏–π",
                        "callback": self._change_lang,
                        "args": ("ru",),
                    }
                ],
            ]
            if lang == "en"
            else [
                [{"text": "ü•∑ –ß–∞—Ç –ø–æ–º–æ—â–∏", "url": "https://t.me/hikka_talks"}],
                [
                    {
                        "text": "üá¨üáß English",
                        "callback": self._change_lang,
                        "args": ("en",),
                    }
                ],
            ]
        )

        await self.inline.bot.send_animation(
            client.tg_id,
            animation=choice(imgs),
            caption=TEXT,
            reply_markup=self.inline.generate_markup(self.mark("en")),
        )

        db.set("hikka", "disable_quickstart", True)

    async def _change_lang(self, call: BotInlineCall, lang: str):
        if lang == "ru":
            self._db.set(translations.__name__, "lang", "ru")
            await self.translator.init()
            await call.answer("üá∑üá∫ –Ø–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
            await call.edit(text=TEXT_RU, reply_markup=self.mark("ru"))
        elif lang == "en":
            self._db.set(translations.__name__, "lang", "en")
            await self.translator.init()
            await call.answer("üá¨üáß Language saved!")
            await call.edit(text=TEXT, reply_markup=self.mark("en"))
